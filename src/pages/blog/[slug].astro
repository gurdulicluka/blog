---
import { getCollection, CollectionEntry } from "astro:content";
import { sortByDate } from "../../js/utils";

// components
import MainLayout from "../../layouts/MainLayout.astro";
import NewsletterCard from "../../components/post/NewsletterCard.astro";
import LatestPostCard from "../../components/post/LatestPostCard.astro";
import ArticleCard from "../../components/ArticleCard.astro";
import RelatedPostCard from "../../components/post/RelatedPostCard.astro";
import AuthorBadge from "../../components/AuthorBadge.astro";

// generate props and params for each path
export async function getStaticPaths() {
  const allPosts = await getCollection("blog");
  const formattedPosts = sortByDate(allPosts);
  return formattedPosts.map((post) => ({
    params: { slug: post.slug },
    props: {
      post,
    },
  }));
}

interface Props {
  post: CollectionEntry<"blog">;
}

const allPosts = await getCollection("blog");
const formattedPosts = sortByDate(allPosts);
const { post } = Astro.props as Props;
const { title, description, category, image, author, date } = post.data;
const { Content } = await post.render();
const latestPosts = formattedPosts.slice(0, 3);
const relatedPosts = formattedPosts
  .filter(
    (post) => post.data.category.toLowerCase() === category.toLowerCase()
    // post.data.title !== title
  )
  .slice(0, 4);
---

<MainLayout title={title} description={description} image={image}>
  <div class="lg:container">
    <img
      src={image.src}
      alt={image.alt}
      class="w-full md:h-[445px] h-[375px] lg:rounded-b-md lg:h-[600px] brightness-[0.5] object-cover object-center"
    />
    <!-- BELOW IMAGE CONTENT -->
    <section
      class="sm:p-8 p-5 flex flex-col rounded-b-lg xl:flex-row sm:-my-[calc(0.20*435px)] -my-[calc(0.20*435px)] relative shadow-lg z-20 rounded-t-2xl sm:w-[95%] w-[98%] mx-auto bg-base-300"
    >
      <!-- BLOG POST -->
      <div class="xl:pr-8 flex-1">
        <!-- AUTHOR, SHARE LINKS, TITLE -->
        <div>
          <AuthorBadge author={author} date={date} horizontal={true} />
          <h1 class="text-4xl font-bold my-6">{title}</h1>
          <p>{description}</p>
        </div>
        <!-- --- -->
        <div
          class="prose xl:prose-lg prose-headings:text-base-content max-w-none"
        >
          <Content />
        </div>
      </div>
      <!-- SIDEBAR -->
      <aside class="w-[30%] border-l border-base-200 pl-7 hidden xl:block">
        <div class="sticky top-[70px]">
          <NewsletterCard />
          <h3 class="text-lg font-bold mb-3">Latest Posts</h3>
          <div class="flex flex-col gap-5">
            {
              latestPosts.map((post) => {
                return <LatestPostCard post={post} />;
              })
            }
          </div>
        </div>
      </aside>
      <!-- --- -->
    </section>
  </div>
  <!-- RELATED POSTS -->
  <section
    class="bg-base-300 pt-[140px] pb-[60px] pattern border-t-4 border-secondary/60"
  >
    <div
      class="2xl:container sm:px-8 px-4 py-8 z-10 relative backdrop-blur-sm bg-base-100/20 rounded-xl"
    >
      <h2 class="font-bold text-2xl sm:text-4xl mb-4 sm:mb-6">Related posts</h2>
      <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6">
        {
          relatedPosts.map((post) => {
            return <RelatedPostCard post={post} />;
          })
        }
      </div>
    </div>
  </section>
</MainLayout>
