---
// NOTE: BLOG POST PAGE //
import { getCollection, CollectionEntry } from "astro:content";
import { sortByDate } from "../../js/utils";
// components
import MainLayout from "../../layouts/MainLayout.astro";
import PostHeader from "../../components/BlogPost/PostHeader.astro";
import PostContent from "../../components/BlogPost/PostContent.astro";
import RelatedPosts from "../../components/BlogPost/RelatedPosts.astro";
import KeepReading from "../../components/KeepReading.astro";
// generate props and params for each path
export async function getStaticPaths() {
  const allPosts = await getCollection("blog");
  const formattedPosts = sortByDate(allPosts);
  return formattedPosts.map((post) => ({
    params: { slug: post.slug },
    props: {
      post,
    },
  }));
}

interface Props {
  post: CollectionEntry<"blog">;
}

const allPosts = await getCollection("blog");
const formattedPosts = sortByDate(allPosts);
const { post } = Astro.props as Props;
const { title, description, category, image } = post.data;
const { Content } = await post.render();
const relatedPosts = formattedPosts
  .filter(
    (post) =>
      post.data.category.toLowerCase() === category.toLowerCase() &&
      post.data.title !== title
  )
  .slice(0, 3);
---

<MainLayout title={title} description={description} image={image}>
  <PostHeader post={post.data} />
  <PostContent>
    <Content />
    <RelatedPosts
      relatedPosts={relatedPosts}
      category={category}
      slot="sidebar"
    />
  </PostContent>
  <KeepReading />
</MainLayout>
